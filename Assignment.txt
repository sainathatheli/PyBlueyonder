Assignments On Variable, Operator and Expression
=================================
1. Write a program that asks the user for his name and then welcomes him. The output should look like this:

Enter your name: Saksham
Hello Saksham

2. Write a program that prompts the user to enter two integers and display their sum on the screen.

3. Write a program that prompts the user to input a Celsius temperature and outputs the equivalent temperature in Fahrenheit. The formula to convert the temperature is: F = 9/5 C + 32 where F is the Fahrenheit temperature and C is the Celsius temperature. 

4. Write a program which accept principle, rate and time from user and print the simple interest. 
The formula to calculate simple interest is: simple interest = principle x rate x time / 100 

5. Write a program that accepts seconds from keyboard as integer. Your program should converts seconds in hours, minutes and seconds. Your output should like this :

Enter seconds: 13400
Hours: 3
Minutes: 43
Seconds: 20  

6. Write a program that prompts the user to enter number in two variables and swap the contents of the variables. 

7. Write a program that prompts the user to enter number in two variables and swap the contents of the variables.(Do not declare extra variable.)

List:
=====
1. Write a program that accepts a list from user and print the alternate element of list.

How many elements you want to enter? 6
Enter 6 elements
10
20
30
40
50
60
Alternate elements are:
10
30
50

2. Write a program that accepts a list from user. Your program should reverse the content of list and display it. Do not use reverse() method.

3. Find and display the largest number of a list without using built-in function max(). Your program should ask the user to input values in list from keyboard. 

4. Write a program that rotates the element of a list so that the element at the first index moves to the second index, the element in the second index moves to the third index, etc., and the element in the last index moves to the first index.

How many elements you want to enter? 4
Enter 4 elements
sunday
monday
tuesday
wednesday
list before shifting ['sunday', 'monday', 'tuesday', 'wednesday']
list after shifting ['wednesday', 'sunday', 'monday', 'tuesday']

5. Write a program that input a string and ask user to delete a given word from a string.

6. Write a program that reads a string from the user containing a date in the form mm/dd/yyyy. It should print the date in the form March 12, 2021.


Dictionary:
===========
1)Write a program that reads string from user. Your program should create a dictionary having key as word length and value is count of words of that length. For example, if user enters 'A fat cat is on the mat'.

Word	Word length
A	1
fat	3
cat	3
is	2
on	2
the	3
mat	3
The content of dictionary should be {1:1, 3:4, 2:2}

2)Write a program to read 6 numbers and create a dictionary having keys EVEN and ODD. Dictionary's value should be stored in list. Your dictionary should be like:
{'EVEN':[8,10,64], 'ODD':[1,5,9]}


Exercises on Files
===================
1)Write a program that writes 10 random numbers to a file 'numbers.txt'. Each random number should be in the range of 1 through 100(hint use random module-->randominit())

2)Write a program that reads and display all of the numbers stored in the file numbers.txt (created in      question 1) and calculates their total.

3)Write a function, digit_count() in Python that counts and displays the number of digits in the text file named 'sample.txt'. 
For example, if the content of 'sample.txt' is as follows :
The team achieved a milestone in 2023. They completed a multi-million-dollar project ahead of schedule. Stakeholders were impressed with a 98% success rate.

The function should display the output as 6

4)Write a function lines_count() that reads lines from a text file named 'zen.txt' and displays the lines that begin with any vowel. Assume the file contains the following text and already exists on the computer's disk:

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.

The lines_count() function should display the output as:
Explicit is better than implicit.


Exercises On Inheritance:
=========================
1. Write a program to create a class by name Students, and initialize attributes like name, age, and grade while creating an object.
Solution: To create a class in Python, we use the class keyword, and to initialize the attribute during object creation, we define the __init__() method.

2. Write a Program to create a valid empty class with the name Students, with no properties.

3.Write a program to create a child class Teacher(name, age) that will inherit the properties from the parent class Staff(role, dept, salary) and display the staff details using show_details()

output:
Name:  Raj
Age:  28
Role: Teacher
Department: Science



5-a: New Class Which Inherits

A new class named F14 is initated for you which inherits from the parent class Jets.

Instead of taking parameters other than self such as name and country, initiate the new class so that name is always fixed to "F14" and origin is always fixed to "USA"

Make sure the new class has its own initation method (constructor or __init__) which takes only one parameter:self and overrides name and origin attributes as those don't change for an F14 fighter jet.

HINT 1
Note that new class inherits the parent class by having it inside its parenthesis as following:

class F14(Jets):

HINT 2

Inside the new class you can start defining it with the initiator method __init__
class F14(Jets):
    def __init__(self):

solution:
---------
class Jets:

    def __init__(self, name, country):
        self.type = "Jet"
        self.area = "Air"
        self.name = name
        self.origin = country
                
#Type your code below inside the new class

class F14(Jets):

    def __init__(self)
        



a=F14() 
print(a.origin)
print(a.name)


5-b: __init__ Constructor and New Attributes

A new class named F14 is initated for you which inherits from the parent class Jets.

Under this new class, define 4 methods regarding engine, seat, tail and speed.

Make sure the new class has its own initation method (constructor or __init__) ehich takes only one parameter:self and overrides name and origin attributes to "F14" and "USA" always as those don't change for an F14 fighter jet.

Also add 3 more attributes:
engine, seat, tail which are all 2 by default.

HINT 1
Again you need to start with inheriting the parent class as following and then start constructing its own attributes.
class F14(Jets):

HINT 2
Second step will be the initiation method:

class F14(Jets):

    def __init__(self):  
      
After that you can continue defining your attributes inside the method.

HINT 3
Once attributions are defined correctly youâ€™ll need to create an instance of F16 and assign it to the variable a as a final step.

a=F16()


solution:
=========
class Jets:
    model = None
    country = 0

    def __init__(self, name, country):
        self.type = "Jet"
        self.area = "Air"
        self.name = name
        self.origin = country
        
               
#Type your code here

class F14(Jets):



2)
a)Create a child class Bus that will inherit all of the variables and methods of the Vehicle class

Given code:

class Vehicle:

    def __init__(self, name, max_speed, mileage):
        self.name = name
        self.max_speed = max_speed
        self.mileage = mileagege=mileage

b)Create a Bus object that will inherit all of the variables and methods of the parent Vehicle class and display it.

Expected Output:

Vehicle Name: School Volvo Speed: 180 Mileage: 12



